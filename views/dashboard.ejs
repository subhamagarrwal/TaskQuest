<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TaskQuest Dashboard</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="/css/flash.css">
    <script src="/js/graphql-client.js"></script>
    <script>
      // Pass user data to frontend - ensure IDs are strings
      window.currentUserId = '<%= user._id.toString() %>';
      window.currentUser = {
        id: '<%= user._id.toString() %>',
        username: '<%= user.username %>',
        email: '<%= user.email %>',
        role: '<%= user.role %>'
      };
    </script>
</head>
<body>
  <script>
    // Initialize GraphQL client
    window.graphqlClient = new GraphQLClient('/graphql');
  </script>

  <!-- Flash Messages -->
  <% if (locals.success && success.length > 0) { %>
    <div id="flash-success" class="flash-notification flash-success">
      <div class="flash-content">
        <div class="flash-icon">✅</div>
        <div class="flash-text"><%= success[0] %></div>
        <button class="flash-close" onclick="closeFlash('flash-success')">&times;</button>
      </div>
      <div class="flash-progress"></div>
    </div>
  <% } %>
  <% if (locals.error && error.length > 0) { %>
    <div id="flash-error" class="flash-notification flash-error">
      <div class="flash-content">
        <div class="flash-icon">❌</div>
        <div class="flash-text"><%= error[0] %></div>
        <button class="flash-close" onclick="closeFlash('flash-error')">&times;</button>
      </div>
      <div class="flash-progress"></div>
    </div>
  <% } %>
  <% if (locals.info && info.length > 0) { %>
    <div id="flash-info" class="flash-notification flash-info">
      <div class="flash-content">
        <div class="flash-icon">ℹ️</div>
        <div class="flash-text"><%= info[0] %></div>
        <button class="flash-close" onclick="closeFlash('flash-info')">&times;</button>
      </div>
      <div class="flash-progress"></div>
    </div>
  <% } %>

  <% if (typeof showCreateQuestPrompt !== 'undefined' && showCreateQuestPrompt) { %>
    <div id="questModalOverlay" style="position: fixed; inset: 0; background: rgba(30,41,59,0.8); backdrop-filter: blur(8px); z-index: 10000; display: flex; align-items: center; justify-content: center;">
      <div id="questModal" style="background: #1e293b; color: #ffffff; border-radius: 16px; box-shadow: 0 8px 32px rgba(0,0,0,0.4); padding: 2rem; min-width: 400px; max-width: 90vw; text-align: center; position: relative; border: 1px solid rgba(255,255,255,0.1);">
        <button onclick="closeQuestModal()" style="position: absolute; top: 1rem; right: 1rem; background: none; border: none; font-size: 1.5rem; color: #64748b; cursor: pointer; padding: 0.25rem;">&times;</button>
        <div style="font-size: 3rem; margin-bottom: 1rem;">🚩</div>
        <div style="font-weight: 700; font-size: 1.4rem; margin-bottom: 0.5rem; color: #ffffff;">Welcome to TaskQuest!</div>
        <div style="margin-bottom: 1.5rem; color: #94a3b8;">Create your first quest to begin your adventure and start managing tasks effectively.</div>
        <form id="createQuestForm" style="text-align: left;">
          <div style="margin-bottom: 1rem;">
            <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0; font-weight: 500;">Quest Title *</label>
            <input type="text" name="title" placeholder="e.g., Complete Project Setup" required style="width: 100%; padding: 0.75rem; border-radius: 8px; border: 1px solid #475569; background: #334155; color: #ffffff; font-size: 0.9rem;">
          </div>
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0; font-weight: 500;">Description</label>
            <textarea name="description" placeholder="Describe what this quest involves..." style="width: 100%; padding: 0.75rem; border-radius: 8px; border: 1px solid #475569; background: #334155; color: #ffffff; font-size: 0.9rem; min-height: 80px; resize: vertical;"></textarea>
          </div>
          <button type="submit" style="width: 100%; padding: 0.75rem; background: linear-gradient(45deg, #8b5cf6, #7c3aed); color: white; border: none; border-radius: 8px; font-weight: 600; font-size: 1rem; cursor: pointer; transition: all 0.2s;">🎯 Create Quest</button>
        </form>
      </div>
    </div>
  <% } %>

  <!-- Mobile Menu Toggle -->
  <div class="mobile-menu-toggle" id="mobileMenuToggle">
    <div class="hamburger" id="hamburger">
      <span></span>
      <span></span>
      <span></span>
    </div>
  </div>

  <!-- Mobile Overlay -->
  <div class="mobile-overlay" id="mobileOverlay"></div>

  <!-- Sidebar -->
  <div class="sidebar" id="sidebar" style="height: 100vh; display: flex; flex-direction: column;">
    <div>
      <div class="logo">
        <img src="/taskquest-icon-static.svg" alt="TaskQuest" style="width: 32px; height: 32px;">
        <span style="font-weight: 600; font-size: 1.2rem;">TaskQuest</span>
      </div>    
      
      <div class="nav-section">
        <div class="nav-title">Overview</div>
        <a href="/dashboard?section=overview" class="nav-item <%= typeof activeSection !== 'undefined' && activeSection === 'overview' ? 'active' : '' %>">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"/></svg>')"></div>
          Overview
        </a>
      </div>

      <div class="nav-section">
        <div class="nav-title">Tasks</div>
        <a href="/dashboard?section=tasks" class="nav-item <%= typeof activeSection !== 'undefined' && activeSection === 'tasks' ? 'active' : '' %>">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"/></svg>')"></div>
          Manage Tasks
        </a>
      </div>

      <div class="nav-section">
        <div class="nav-title">Users</div>
        <a href="/dashboard?section=quests" class="nav-item <%= typeof activeSection !== 'undefined' && activeSection === 'quests' ? 'active' : '' %>">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"/></svg>')"></div>
          Manage Users
        </a>
      </div>

      <div class="nav-section">
        <div class="nav-title">Bot</div>
        <a href="/dashboard?section=bot" class="nav-item <%= typeof activeSection !== 'undefined' && activeSection === 'bot' ? 'active' : '' %>">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 11c0-1.104.896-2 2-2s2 .896 2 2-.896 2-2 2-2-.896-2-2zm0 0V7m0 4v4m0 0c0 1.104-.896 2-2 2s-2-.896-2-2 .896-2 2-2 2 .896 2 2z\"/></svg>')"></div>
          Manage Bot
        </a>
      </div>

      <div class="nav-section">
        <div class="nav-title">Performance</div>
        <a href="/dashboard?section=performance" class="nav-item <%= typeof activeSection !== 'undefined' && activeSection === 'performance' ? 'active' : '' %>">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 17v-2a4 4 0 018 0v2m-4 4h.01M4 4h16v16H4V4z\"/></svg>')"></div>
          Performance Breakdown
        </a>
      </div>

      <div class="nav-section" style="margin-top: auto; border-top: 1px solid rgba(255,255,255,0.1); padding-top: 1rem;">
        <div class="nav-title" style="color: #ef4444;">Logout</div>
        <a href="/logout" class="nav-item" style="background: rgba(239, 68, 68, 0.1); border: 1px solid rgba(239, 68, 68, 0.3); color: #ef4444;">
          <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 002 2h3a2 2 0 002-2v-1m0-8V7a2 2 0 00-2-2h-3a2 2 0 00-2 2v1\"/></svg>'); background-color: #ef4444;"></div>
          🚪 Logout
        </a>
      </div>

    </div>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <% if (typeof activeSection !== 'undefined' && activeSection === 'overview') { %>
      <%- include('partials/overview', { user, tasks }) %>
    <% } else if (typeof activeSection !== 'undefined' && activeSection === 'tasks') { %>
      <%- include('partials/tasks', { user, tasks, quests }) %>
    <% } else if (typeof activeSection !== 'undefined' && activeSection === 'quests') { %>
      <%- include('partials/quests', { user, quests }) %>
    <% } else if (typeof activeSection !== 'undefined' && activeSection === 'bot') { %>
      <%- include('partials/bot', { user }) %>
    <% } else if (typeof activeSection !== 'undefined' && activeSection === 'performance') { %>
      <%- include('partials/performance', { user, tasks }) %>
    <% } else { %>
      <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; text-align: center;">
        <div style="font-size: 4rem; margin-bottom: 2rem;">🎯</div>
        <h2 style="color: #ffffff; margin-bottom: 1rem; font-size: 2rem;">Welcome to TaskQuest Dashboard</h2>
        <p style="color: #64748b; font-size: 1.1rem; margin-bottom: 2rem; max-width: 500px;">Select any section from the sidebar to get started with managing your tasks, quests, bot, or view your performance analytics.</p>
      </div>
    <% } %>
  </div>
  <script>
    // Flash message functions for success/error notifications
    function closeFlash(flashId) {
      const flashElement = document.getElementById(flashId);
      if (flashElement) {
        flashElement.classList.add('flash-out');
        setTimeout(() => {
          flashElement.remove();
        }, 300);
      }
    }

    // Auto-hide flash messages after 3 seconds
    document.addEventListener('DOMContentLoaded', function() {
      const flashMessages = document.querySelectorAll('.flash-notification');
      flashMessages.forEach(msg => {
        setTimeout(() => {
          if (msg.parentNode) {
            msg.classList.add('flash-out');
            setTimeout(() => {
              if (msg.parentNode) {
                msg.remove();
              }
            }, 300);
          }
        }, 3000);
      });
    });

    // Quest Modal Functions - Handle popup for creating first quest
    function closeQuestModal() {
      const modal = document.getElementById('questModalOverlay');
      if (modal) {
        modal.style.display = 'none';
      }
    }

    function openQuestModal() {
      const modal = document.getElementById('questModalOverlay');
      if (modal) {
        modal.style.display = 'flex';
      }
    }

    // Allow closing modal with Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeQuestModal();
      }
    });

    // Close modal when clicking on overlay background
    document.addEventListener('DOMContentLoaded', function() {
      const overlay = document.getElementById('questModalOverlay');
      if (overlay) {
        overlay.addEventListener('click', function(e) {
          if (e.target === overlay) {
            closeQuestModal();
          }
        });
      }
    });

    // Handle create quest form submission - USE GRAPHQL
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('createQuestForm');
      if (form) {
        form.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          // Get form data
          const title = this.title.value.trim();
          const description = this.description.value.trim();
          
          // Validate title is not empty
          if (!title) {
            alert('Quest title is required!');
            return;
          }
          
          // Disable submit button to prevent double submission
          const submitBtn = this.querySelector('button[type="submit"]');
          const originalText = submitBtn.textContent;
          submitBtn.disabled = true;
          submitBtn.textContent = '🔄 Creating...';
          
          try {
            console.log('🎯 Submitting quest via GraphQL:', { title, description });
            
            // Use GraphQL client to create quest
            const data = await window.graphqlClient.createQuest(title, description);
            console.log('✅ Quest created successfully:', data);
            
            // Success - reload the page to show the new quest
            window.location.reload();
            
          } catch (error) {
            console.error('❌ Error creating quest:', error);
            alert('Error creating quest: ' + error.message);
            
            // Re-enable button
            submitBtn.disabled = false;
            submitBtn.textContent = originalText;
          }
        });
      }
    });

    // Mobile menu functionality
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const hamburger = document.getElementById('hamburger');
    const sidebar = document.getElementById('sidebar');
    const mobileOverlay = document.getElementById('mobileOverlay');

    function toggleMobileMenu() {
      hamburger.classList.toggle('open');
      sidebar.classList.toggle('active');
      mobileOverlay.classList.toggle('active');
      document.body.style.overflow = sidebar.classList.contains('active') ? 'hidden' : '';
    }

    mobileMenuToggle.addEventListener('click', toggleMobileMenu);
    mobileOverlay.addEventListener('click', toggleMobileMenu);

    // Close mobile menu on window resize if screen becomes larger
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        hamburger.classList.remove('open');
        sidebar.classList.remove('active');
        mobileOverlay.classList.remove('active');
        document.body.style.overflow = '';
      }
    });

    // Close mobile menu when nav item is clicked
    document.querySelectorAll('.nav-item').forEach(item => {
      item.addEventListener('click', function() {
        if (window.innerWidth <= 768) {
          toggleMobileMenu();
        }
      });
    });

    // Simulate real-time updates for progress bars
    setInterval(() => {
      const progressBars = document.querySelectorAll('.progress-fill');
      progressBars.forEach(bar => {
        const currentWidth = parseInt(bar.style.width);
        if (currentWidth < 100) {
          bar.style.width = (currentWidth + Math.random() * 2) + '%';
        }
      });
    }, 5000);
  </script>
</body>
</html>

