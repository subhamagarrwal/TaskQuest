<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TaskQuest Dashboard</title>
    <link rel="stylesheet" href="/css/dashboard.css">
</head>
<body>
  <!-- Mobile Menu Toggle -->
  <div class="mobile-menu-toggle" id="mobileMenuToggle">
    <div class="hamburger" id="hamburger">
      <span></span>
      <span></span>
      <span></span>
    </div>
  </div>

  <!-- Mobile Overlay -->
  <div class="mobile-overlay" id="mobileOverlay"></div>

  <!-- Sidebar -->
  <div class="sidebar" id="sidebar">
    <div class="logo">
      <div class="logo-icon">TQ</div>
      <span style="font-weight: 600; font-size: 1.2rem;">TaskQuest</span>
    </div>    
    
    <div class="nav-section">
      <div class="nav-title">Overview</div>
      <div class="nav-section-header">
        <span>Overview</span>
        <div class="chevron"></div>
      </div>
      <div class="nav-item active">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z%22/%3E%3C/svg%3E')"></div>
        Overview
      </div>
    </div>

    <div class="nav-section">
      <div class="nav-title">Dashboards</div>
      <div class="nav-section-header">
        <span>Dashboards</span>
        <div class="chevron"></div>
      </div>
      <div class="nav-item">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2%22/%3E%3C/svg%3E')"></div>
        Manage Tasks
      </div>
      <div class="nav-item">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z%22/%3E%3C/svg%3E')"></div>
        Messenger
      </div>
    </div>

    <div class="nav-section">
      <div class="nav-title">Management</div>
      <div class="nav-section-header">
        <span>Management</span>
        <div class="chevron"></div>
      </div>
      <div class="nav-item">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z%22/%3E%3C/svg%3E')"></div>
        Quests List
      </div>
    </div>

    <div class="nav-section">
      <div class="nav-title">Accounts</div>
      <div class="nav-section-header">
        <span>Accounts</span>
        <div class="chevron"></div>
      </div>
      <div class="nav-item">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z%22/%3E%3C/svg%3E')"></div>
        User Profile
      </div>
      <div class="nav-item">
        <div class="nav-icon" style="mask-image: url('data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 fill=%22none%22 viewBox=%220 0 24 24%22 stroke=%22currentColor%22><path stroke-linecap=%22round%22 stroke-linejoin=%22round%22 stroke-width=%222%22 d=%22M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z%22/%3E%3C/svg%3E')"></div>
        Account Settings
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header">
      <h1>Overview</h1>
      <div class="user-info">
        <div class="user-avatar">
          <%= user && user.username ? user.username.charAt(0).toUpperCase() : 'U' %>
        </div>
        <div>
          <div style="font-weight: 600;"><%= user && user.username ? user.username : 'User' %></div>
          <div style="color: #64748b; font-size: 0.875rem;"><%= user && user.role === 'ADMIN' ? 'Project Manager' : 'Team Member' %></div>
        </div>
      </div>
    </div>

    <!-- Task Progress Cards -->
    <div class="dashboard-grid">
      <div class="dashboard-card">
        <div class="card-header">
          <div class="card-avatar"></div>
          <div class="card-info">
            <h3>Active Tasks</h3>
            <p>Current assignments</p>
          </div>
        </div>
        <div class="progress-info">
          <span><%= tasks ? tasks.filter(t => !t.completed).length : 0 %> out of <%= tasks ? tasks.length : 0 %> tasks pending</span>
        </div>
        <div class="progress-bar">
          <div class="progress-fill" style="width: <%= tasks && tasks.length > 0 ? ((tasks.filter(t => t.completed).length / tasks.length) * 100) : 0 %>%;"></div>
        </div>
      </div>

      <div class="dashboard-card">
        <div class="card-header">
          <div class="card-avatar" style="background: linear-gradient(45deg, #f59e0b, #ef4444);"></div>
          <div class="card-info">
            <h3>Completed Tasks</h3>
            <p>Successfully finished</p>
          </div>
        </div>
        <div class="progress-info">
          <span><%= tasks ? tasks.filter(t => t.completed).length : 0 %> out of <%= tasks ? tasks.length : 0 %> tasks completed</span>
        </div>
        <div class="progress-bar">
          <div class="progress-fill" style="width: <%= tasks && tasks.length > 0 ? ((tasks.filter(t => t.completed).length / tasks.length) * 100) : 0 %>%; background: linear-gradient(90deg, #f59e0b, #ef4444);"></div>
        </div>
      </div>

      <div class="dashboard-card">
        <div class="card-header">
          <div class="card-avatar" style="background: linear-gradient(45deg, #10b981, #059669);"></div>
          <div class="card-info">
            <h3>Quest Progress</h3>
            <p>Overall completion</p>
          </div>
        </div>
        <div class="progress-info">
          <span>Quest participation rate</span>
        </div>
        <div class="progress-bar">
          <div class="progress-fill" style="width: 85%; background: linear-gradient(90deg, #10b981, #059669);"></div>
        </div>
      </div>
    </div>

    <!-- Main Dashboard -->
    <div class="dashboard-main">
      <!-- Analytics -->
      <div class="analytics-section">
        <div class="section-header">
          <h2 class="section-title">Tasks Analytics</h2>
          <select class="filter-dropdown">
            <option>Last year</option>
            <option>Last month</option>
            <option>Last week</option>
          </select>
        </div>
        <div class="chart-container">
          <p>Task completion chart will be displayed here</p>
        </div>

        <!-- Recent Tasks -->
        <div class="tasks-list">
          <h3 style="margin-bottom: 1rem;">Recent Tasks</h3>
          <% if (tasks && tasks.length > 0) { %>
            <% tasks.slice(0, 5).forEach(task => { %>
              <div class="task-item">
                <div class="task-info">
                  <h4><%= task.title %></h4>
                  <p><%= task.description || 'No description' %></p>
                </div>
                <div class="task-status <%= task.completed ? 'status-completed' : 'status-pending' %>">
                  <%= task.completed ? 'Completed' : 'Pending' %>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="task-item">
              <div class="task-info">
                <h4>No tasks yet</h4>
                <p>Create your first task to get started</p>
              </div>
              <div class="task-status status-pending">Pending</div>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Performance Card -->
      <div class="performance-card">
        <h2 class="performance-title">Performance</h2>
        
        <div class="metric">
          <div class="metric-icon">ðŸ“‹</div>
          <div class="metric-info">
            <h3><%= tasks ? tasks.length : 0 %></h3>
            <p>tasks created</p>
          </div>
        </div>

        <div class="metric">
          <div class="metric-icon">âœ…</div>
          <div class="metric-info">
            <h3><%= tasks ? tasks.filter(t => t.completed).length : 0 %></h3>
            <p>tasks completed</p>
          </div>
        </div>

        <div style="background: rgba(0, 0, 0, 0.2); height: 4px; border-radius: 2px; margin-top: 1rem;">
          <div style="background: #ffffff; height: 100%; width: <%= tasks && tasks.length > 0 ? ((tasks.filter(t => t.completed).length / tasks.length) * 100) : 0 %>%; border-radius: 2px;"></div>
        </div>
      </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
      <% if (user && user.role === 'ADMIN') { %>
        <a href="/create-task" class="btn btn-primary">Create New Task</a>
        <a href="/create-quest" class="btn btn-primary">Create New Quest</a>
        <a href="/manage-users" class="btn btn-secondary">Manage Users</a>
      <% } else { %>
        <a href="/my-tasks" class="btn btn-primary">View My Tasks</a>
        <a href="/join-quest" class="btn btn-secondary">Join Quest</a>
      <% } %>
    </div>
  </div>
  <script>
    // Mobile menu functionality
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const hamburger = document.getElementById('hamburger');
    const sidebar = document.getElementById('sidebar');
    const mobileOverlay = document.getElementById('mobileOverlay');

    function toggleMobileMenu() {
      hamburger.classList.toggle('open');
      sidebar.classList.toggle('active');
      mobileOverlay.classList.toggle('active');
      document.body.style.overflow = sidebar.classList.contains('active') ? 'hidden' : '';
    }

    mobileMenuToggle.addEventListener('click', toggleMobileMenu);
    mobileOverlay.addEventListener('click', toggleMobileMenu);

    // Close mobile menu on window resize if screen becomes larger
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        hamburger.classList.remove('open');
        sidebar.classList.remove('active');
        mobileOverlay.classList.remove('active');
        document.body.style.overflow = '';
      }
    });

    // Navigation accordion functionality for mobile
    function setupAccordion() {
      const navSectionHeaders = document.querySelectorAll('.nav-section-header');
      
      navSectionHeaders.forEach(header => {
        header.addEventListener('click', function() {
          const navSection = this.parentElement;
          const isCollapsed = navSection.classList.contains('collapsed');
          
          // On mobile, close all other sections when opening one
          if (window.innerWidth <= 768) {
            navSectionHeaders.forEach(otherHeader => {
              if (otherHeader !== header) {
                otherHeader.parentElement.classList.add('collapsed');
              }
            });
          }
          
          navSection.classList.toggle('collapsed', !isCollapsed);
        });
      });

      // Initialize accordion state for mobile
      if (window.innerWidth <= 768) {
        document.querySelectorAll('.nav-section').forEach((section, index) => {
          if (index > 0) { // Keep first section open
            section.classList.add('collapsed');
          }
        });
      }
    }

    // Navigation item activation
    document.querySelectorAll('.nav-item').forEach(item => {
      item.addEventListener('click', function() {
        // Don't activate section headers
        if (this.classList.contains('nav-section-header')) return;
        
        document.querySelectorAll('.nav-item').forEach(i => i.classList.remove('active'));
        this.classList.add('active');
        
        // Close mobile menu when nav item is clicked
        if (window.innerWidth <= 768) {
          toggleMobileMenu();
        }
      });
    });

    // Simulate real-time updates
    setInterval(() => {
      const progressBars = document.querySelectorAll('.progress-fill');
      progressBars.forEach(bar => {
        const currentWidth = parseInt(bar.style.width);
        if (currentWidth < 100) {
          bar.style.width = (currentWidth + Math.random() * 2) + '%';
        }
      });
    }, 5000);

    // Initialize accordion functionality
    setupAccordion();

    // Reinitialize accordion on window resize
    window.addEventListener('resize', function() {
      setupAccordion();
    });
  </script>
</body>
</html>
