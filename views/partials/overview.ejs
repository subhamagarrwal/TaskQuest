<!-- Header -->
<div class="header">
  <h1>Overview</h1>
  <div class="user-info">
    <div class="user-avatar">
      <%= user && user.username ? user.username.charAt(0).toUpperCase() : 'U' %>
    </div>
    <div>
      <div style="font-weight: 600;"><%= user && user.username ? user.username : 'User' %></div>
      <div style="color: #64748b; font-size: 0.875rem;"><%= user && user.role === 'ADMIN' ? 'Admin' : 'User' %></div>
    </div>
  </div>
</div>

<!-- Task Progress Cards -->
<div class="dashboard-grid">
  <div class="dashboard-card">
    <div class="card-header">
      <div class="card-avatar" style="background: linear-gradient(45deg, #3b82f6, #1d4ed8); display: flex; align-items: center; justify-content: center; font-size: 2rem;">+</div>
      <div class="card-info">
        <h3>Create New Task</h3>
        <p>Start a new assignment</p>
      </div>
    </div>
    <button onclick="navigateToTasksAndOpenModal()" class="btn btn-primary" style="width: 100%; text-align: center;">Create Task</button>
  </div>

  <% if (typeof quests !== 'undefined' && quests && quests.length > 0) { %>
    <div class="dashboard-card">
      <div class="card-header">
        <div class="card-avatar" style="background: linear-gradient(45deg, #f59e0b, #ef4444); display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">✏️</div>
        <div class="card-info">
          <h3>Edit Quest</h3>
          <p>Modify quest details</p>
        </div>
      </div>
      <button onclick="openQuestEditFromOverview()" class="btn btn-warning" style="width: 100%; text-align: center; background: linear-gradient(45deg, #f59e0b, #ef4444); color: #fff; border: none;">Edit Quest</button>
    </div>
  <% } %>

  <div class="dashboard-card">
    <div class="card-header">
      <div class="card-avatar" style="background: linear-gradient(45deg, #10b981, #059669); display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">👥</div>
      <div class="card-info">
        <h3>Team Members</h3>
        <p>Assign users to tasks</p>
      </div>
    </div>
    <button onclick="navigateToQuestsAndOpenUserModal()" class="btn btn-secondary" style="width: 100%; text-align: center;">Team Members</button>
  </div>
</div>

<!-- Quest Management Section -->
<% if (typeof quests !== 'undefined' && quests && quests.length > 0) { %>
  <div class="dashboard-grid" style="margin-top: 2rem;">
    <div class="dashboard-card" style="grid-column: 1 / -1;">
      <div class="card-header">
        <div class="card-avatar" style="background: linear-gradient(45deg, #8b5cf6, #7c3aed); display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">🎯</div>
        <div class="card-info">
          <h3><%= quests[0].title %></h3>
          <p><%= quests[0].description || 'Quest Description' %></p>
        </div>
      </div>
      
      <!-- Quest Invite Code Section -->
      <div style="background: rgba(139, 92, 246, 0.1); border: 1px solid rgba(139, 92, 246, 0.3); border-radius: 12px; padding: 1.5rem; margin: 1rem 0;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <h4 style="margin: 0; color: #e2e8f0; display: flex; align-items: center; gap: 0.5rem;">
            🔗 Quest Invite Code
          </h4>
          <div style="display: flex; gap: 0.5rem;">
            <button onclick="generateInviteCode('<%= quests[0]._id %>')" class="btn btn-primary" style="background: linear-gradient(45deg, #8b5cf6, #7c3aed); padding: 0.5rem 1rem; font-size: 0.875rem;">
              🔄 Generate New Code
            </button>
            <button onclick="openUserCodeModal('<%= quests[0]._id %>')" class="btn btn-secondary" style="background: linear-gradient(45deg, #f59e0b, #ef4444); padding: 0.5rem 1rem; font-size: 0.875rem; color: #fff;">
              🔑 Generate User Codes
            </button>
          </div>
        </div>
        
        <div id="invite-code-section-<%= quests[0]._id %>">
          <% if (quests[0].inviteCode) { %>
            <div style="background: #1e293b; border-radius: 8px; padding: 1rem; border: 1px solid #334155;">
              <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem;">
                <label style="color: #94a3b8; font-size: 0.875rem; font-weight: 500;">Quest Code:</label>
                <button onclick="copyToClipboard('<%= quests[0].inviteCode %>')" class="btn btn-secondary" style="padding: 0.25rem 0.5rem; font-size: 0.75rem;">📋 Copy</button>
              </div>
              <div style="font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace; font-size: 1.125rem; font-weight: 700; color: #a78bfa; background: #0f172a; padding: 0.75rem; border-radius: 6px; border: 1px solid #475569; letter-spacing: 0.1em;">
                <%= quests[0].inviteCode %>
              </div>
              
              <div style="margin-top: 1rem;">
                <label style="color: #94a3b8; font-size: 0.875rem; font-weight: 500; display: block; margin-bottom: 0.5rem;">Bot Invitation Link:</label>
                <div style="display: flex; gap: 0.5rem;">
                  <input type="text" 
                         id="bot-link-<%= quests[0]._id %>" 
                         value="https://t.me/<%= process.env.BOT_USERNAME || 'your_bot' %>?start=auth_<%= quests[0].inviteCode %>" 
                         readonly 
                         style="flex: 1; padding: 0.5rem; background: #0f172a; border: 1px solid #475569; border-radius: 6px; color: #94a3b8; font-size: 0.875rem; font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;">
                  <button onclick="copyBotLink('<%= quests[0]._id %>')" class="btn btn-secondary" style="padding: 0.5rem; font-size: 0.75rem;">📋</button>
                  <button onclick="shareBotLink('<%= quests[0]._id %>')" class="btn btn-primary" style="background: linear-gradient(45deg, #0ea5e9, #0284c7); padding: 0.5rem; font-size: 0.75rem;">📤 Share</button>
                </div>
              </div>
              
              <% if (quests[0].inviteCodeExpires) { %>
                <div style="margin-top: 0.75rem; color: #f59e0b; font-size: 0.8rem; display: flex; align-items: center; gap: 0.5rem;">
                  ⏰ Expires: <%= new Date(quests[0].inviteCodeExpires).toLocaleDateString() %> at <%= new Date(quests[0].inviteCodeExpires).toLocaleTimeString() %>
                </div>
              <% } %>
              
              <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(34, 197, 94, 0.1); border: 1px solid rgba(34, 197, 94, 0.3); border-radius: 6px;">
                <div style="color: #22c55e; font-size: 0.875rem; font-weight: 600; margin-bottom: 0.25rem;">📱 How to invite users:</div>
                <div style="color: #94a3b8; font-size: 0.8rem;">
                  1. Share the bot link above with team members<br>
                  2. Users click the link to auto-join via Telegram<br>
                  3. Or users can manually type: <code style="background: #0f172a; padding: 0.1rem 0.3rem; border-radius: 3px; color: #a78bfa;">/auth <%= quests[0].inviteCode %></code>
                </div>
                
                <!-- User Codes Section -->
                <div id="user-codes-section-<%= quests[0]._id %>" style="margin-top: 1rem; display: none;">
                  <div style="color: #f59e0b; font-size: 0.875rem; font-weight: 600; margin-bottom: 0.5rem;">🔑 Generated User Codes:</div>
                  <div id="user-codes-list-<%= quests[0]._id %>" style="max-height: 200px; overflow-y: auto; background: #0f172a; border-radius: 6px; padding: 0.5rem;"></div>
                </div>
              </div>
            </div>
          <% } else { %>
            <div style="text-align: center; padding: 2rem; color: #64748b;" id="no-code-message-<%= quests[0]._id %>">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🔐</div>
              <p>Generating invite code...</p>
              <p style="font-size: 0.875rem;">Your quest is being set up with an invitation link</p>
            </div>
            <script>
              // Auto-generate invite code for quests without one
              (function() {
                generateInviteCode('<%= quests[0]._id %>').catch(error => {
                  console.error('Failed to auto-generate invite code:', error);
                  document.getElementById('no-code-message-<%= quests[0]._id %>').innerHTML = `
                    <div style="font-size: 2rem; margin-bottom: 0.5rem;">⚠️</div>
                    <p>Failed to generate invite code</p>
                    <p style="font-size: 0.875rem;">Click "Generate New Code" to try again</p>
                  `;
                });
              })();
            </script>
          <% } %>
        </div>
      </div>
      
      <!-- Quest Stats -->
      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 1rem; margin-top: 1rem;">
        <div style="text-align: center; padding: 0.75rem; background: rgba(59, 130, 246, 0.1); border-radius: 8px;">
          <div style="font-size: 1.25rem; font-weight: 700; color: #3b82f6;"><%= quests[0].members ? quests[0].members.length : 0 %></div>
          <div style="font-size: 0.75rem; color: #94a3b8;">Members</div>
        </div>
        <div style="text-align: center; padding: 0.75rem; background: rgba(34, 197, 94, 0.1); border-radius: 8px;">
          <div style="font-size: 1.25rem; font-weight: 700; color: #22c55e;"><%= quests[0].progress || 0 %>%</div>
          <div style="font-size: 0.75rem; color: #94a3b8;">Progress</div>
        </div>
        <div style="text-align: center; padding: 0.75rem; background: rgba(249, 115, 22, 0.1); border-radius: 8px;">
          <div style="font-size: 1.25rem; font-weight: 700; color: #f97316;"><%= tasks ? tasks.filter(t => t.quest && t.quest._id.toString() === quests[0]._id.toString()).length : 0 %></div>
          <div style="font-size: 0.75rem; color: #94a3b8;">Tasks</div>
        </div>
      </div>
    </div>
  </div>
<% } %>

<!-- User Code Generation Modal -->
<div id="userCodeModalOverlay" style="position: fixed; inset: 0; background: rgba(30,41,59,0.8); backdrop-filter: blur(8px); z-index: 10000; display: none; align-items: center; justify-content: center;">
  <div id="userCodeModal" style="background: #1e293b; color: #ffffff; border-radius: 16px; box-shadow: 0 8px 32px rgba(0,0,0,0.4); padding: 2rem; min-width: 500px; max-width: 90vw; max-height: 80vh; overflow-y: auto; text-align: center; position: relative; border: 1px solid rgba(255,255,255,0.1);">
    <button onclick="closeUserCodeModal()" style="position: absolute; top: 1rem; right: 1rem; background: none; border: none; font-size: 1.5rem; color: #64748b; cursor: pointer; padding: 0.25rem;">&times;</button>
    <div style="font-size: 3rem; margin-bottom: 1rem;">🔑</div>
    <div style="font-weight: 700; font-size: 1.4rem; margin-bottom: 0.5rem; color: #ffffff;">Generate User Codes</div>
    <div style="margin-bottom: 1.5rem; color: #94a3b8;">Select team members to generate individual access codes for. Codes expire in 24 hours.</div>
    
    <!-- Loading state -->
    <div id="userCodeModalLoading" style="display: none;">
      <div style="color: #94a3b8; margin: 2rem 0;">Loading team members...</div>
    </div>
    
    <!-- User selection form -->
    <div id="userCodeModalContent" style="text-align: left; display: none;">
      <div style="margin-bottom: 1.5rem;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <label style="color: #e2e8f0; font-weight: 500;">Select Team Members:</label>
          <div style="display: flex; gap: 0.5rem;">
            <button type="button" onclick="selectAllUsers(true)" style="padding: 0.25rem 0.5rem; background: #059669; color: white; border: none; border-radius: 4px; font-size: 0.75rem; cursor: pointer;">Select All</button>
            <button type="button" onclick="selectAllUsers(false)" style="padding: 0.25rem 0.5rem; background: #dc2626; color: white; border: none; border-radius: 4px; font-size: 0.75rem; cursor: pointer;">Clear All</button>
          </div>
        </div>
        <div id="userSelectionList" style="max-height: 300px; overflow-y: auto; border: 1px solid #475569; border-radius: 8px; padding: 0.5rem; background: #334155;">
          <!-- User checkboxes will be populated here -->
        </div>
      </div>
      
      <div style="margin-bottom: 1.5rem; padding: 1rem; background: rgba(249, 115, 22, 0.1); border: 1px solid rgba(249, 115, 22, 0.3); border-radius: 8px;">
        <div style="color: #f97316; font-size: 0.875rem; font-weight: 600; margin-bottom: 0.5rem;">⚠️ Important:</div>
        <div style="color: #94a3b8; font-size: 0.8rem;">
          • Generating new codes will clear any existing codes for selected users<br>
          • Each user gets a unique 6-character code that expires in 24 hours<br>
          • Users can join via bot link or by typing: <code style="background: #0f172a; padding: 0.1rem 0.3rem; border-radius: 3px; color: #a78bfa;">/auth [CODE]</code>
        </div>
      </div>
      
      <div style="display: flex; gap: 1rem;">
        <button type="button" onclick="closeUserCodeModal()" style="flex: 1; padding: 0.75rem; background: #64748b; color: white; border: none; border-radius: 8px; font-weight: 600; font-size: 1rem; cursor: pointer;">Cancel</button>
        <button type="button" onclick="generateSelectedUserCodes()" style="flex: 1; padding: 0.75rem; background: linear-gradient(45deg, #f59e0b, #ef4444); color: white; border: none; border-radius: 8px; font-weight: 600; font-size: 1rem; cursor: pointer;">🔑 Generate Codes</button>
      </div>
    </div>
    
    <!-- Empty state -->
    <div id="userCodeModalEmpty" style="display: none; text-align: center; color: #94a3b8; margin: 2rem 0;">
      <div style="font-size: 2rem; margin-bottom: 1rem;">👥</div>
      <p>No team members found.</p>
      <p style="font-size: 0.875rem;">Add team members to your quest first before generating user codes.</p>
      <button type="button" onclick="closeUserCodeModal()" style="margin-top: 1rem; padding: 0.75rem 1.5rem; background: #64748b; color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer;">Close</button>
    </div>
  </div>
</div>

<!-- User Code Generation Modal -->
<div id="userCodeModalOverlay" style="position: fixed; inset: 0; background: rgba(30,41,59,0.8); backdrop-filter: blur(8px); z-index: 10000; display: none; align-items: center; justify-content: center;">
  <div id="userCodeModal" style="background: #1e293b; color: #ffffff; border-radius: 16px; box-shadow: 0 8px 32px rgba(0,0,0,0.4); padding: 2rem; min-width: 500px; max-width: 90vw; max-height: 80vh; overflow-y: auto; text-align: center; position: relative; border: 1px solid rgba(255,255,255,0.1);">
    <button onclick="closeUserCodeModal()" style="position: absolute; top: 1rem; right: 1rem; background: none; border: none; font-size: 1.5rem; color: #64748b; cursor: pointer; padding: 0.25rem;">&times;</button>
    <div style="font-size: 3rem; margin-bottom: 1rem;">🔑</div>
    <div style="font-weight: 700; font-size: 1.4rem; margin-bottom: 0.5rem; color: #ffffff;">Generate User Codes</div>
    <div style="margin-bottom: 1.5rem; color: #94a3b8;">Select team members to generate individual access codes for. Codes expire in 24 hours.</div>
    
    <!-- Loading state -->
    <div id="userCodeModalLoading" style="display: none;">
      <div style="color: #94a3b8; margin: 2rem 0;">Loading team members...</div>
    </div>
    
    <!-- User selection form -->
    <div id="userCodeModalContent" style="text-align: left; display: none;">
      <div style="margin-bottom: 1.5rem;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <label style="color: #e2e8f0; font-weight: 500;">Select Team Members:</label>
          <div style="display: flex; gap: 0.5rem;">
            <button type="button" onclick="selectAllUsers(true)" style="padding: 0.25rem 0.5rem; background: #059669; color: white; border: none; border-radius: 4px; font-size: 0.75rem; cursor: pointer;">Select All</button>
            <button type="button" onclick="selectAllUsers(false)" style="padding: 0.25rem 0.5rem; background: #dc2626; color: white; border: none; border-radius: 4px; font-size: 0.75rem; cursor: pointer;">Clear All</button>
          </div>
        </div>
        <div id="userSelectionList" style="max-height: 300px; overflow-y: auto; border: 1px solid #475569; border-radius: 8px; padding: 0.5rem; background: #334155;">
          <!-- User checkboxes will be populated here -->
        </div>
      </div>
      
      <div style="margin-bottom: 1.5rem; padding: 1rem; background: rgba(249, 115, 22, 0.1); border: 1px solid rgba(249, 115, 22, 0.3); border-radius: 8px;">
        <div style="color: #f97316; font-size: 0.875rem; font-weight: 600; margin-bottom: 0.5rem;">⚠️ Important:</div>
        <div style="color: #94a3b8; font-size: 0.8rem;">
          • Generating new codes will clear any existing codes for selected users<br>
          • Each user gets a unique 6-character code that expires in 24 hours<br>
          • Users can join via bot link or by typing: <code style="background: #0f172a; padding: 0.1rem 0.3rem; border-radius: 3px; color: #a78bfa;">/auth [CODE]</code>
        </div>
      </div>
      
      <div style="display: flex; gap: 1rem;">
        <button type="button" onclick="closeUserCodeModal()" style="flex: 1; padding: 0.75rem; background: #64748b; color: white; border: none; border-radius: 8px; font-weight: 600; font-size: 1rem; cursor: pointer;">Cancel</button>
        <button type="button" onclick="generateSelectedUserCodes()" style="flex: 1; padding: 0.75rem; background: linear-gradient(45deg, #f59e0b, #ef4444); color: white; border: none; border-radius: 8px; font-weight: 600; font-size: 1rem; cursor: pointer;">🔑 Generate Codes</button>
      </div>
    </div>
    
    <!-- Empty state -->
    <div id="userCodeModalEmpty" style="display: none; text-align: center; color: #94a3b8; margin: 2rem 0;">
      <div style="font-size: 2rem; margin-bottom: 1rem;">👥</div>
      <p>No team members found.</p>
      <p style="font-size: 0.875rem;">Add team members to your quest first before generating user codes.</p>
      <button type="button" onclick="closeUserCodeModal()" style="margin-top: 1rem; padding: 0.75rem 1.5rem; background: #64748b; color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer;">Close</button>
    </div>
  </div>
</div>

<!-- Main Dashboard -->
<div class="dashboard-main">
  <!-- Analytics -->


  <!-- Performance Card -->

</div>

<script>
// Overview navigation functions to link buttons to existing components

// Navigate to tasks section and open task creation modal
function navigateToTasksAndOpenModal() {
  // First navigate to the tasks section
  window.location.href = '/dashboard?section=tasks';
  
  // Set a flag to open the modal once the page loads
  sessionStorage.setItem('openTaskModal', 'true');
}

// Navigate to quests section (team members)
function navigateToQuestsAndOpenUserModal() {
  // Navigate directly to the quests section (where team members management is)
  window.location.href = '/dashboard?section=quests';
}

// Function to open quest edit modal directly from overview
function openQuestEditFromOverview() {
  console.log('🎯 Edit Quest clicked from overview');
  
  <% if (typeof quests !== 'undefined' && quests && quests.length > 0) { %>
    try {
      // Get the first quest data (since only one quest is allowed)
      const questData = {
        id: '<%= quests[0]._id.toString() %>',
        title: '<%= quests[0].title.replace(/'/g, "\\'") %>',
        description: '<%= (quests[0].description || "").replace(/'/g, "\\'") %>',
        completionDate: '<%= quests[0].completionDate ? quests[0].completionDate.toISOString().split("T")[0] : "" %>'
      };
      
      console.log('📊 Quest data prepared:', questData);
      
      // Store quest data in session storage for use in quests section
      sessionStorage.setItem('questEditData', JSON.stringify(questData));
      console.log('💾 Quest data stored in session storage');
    } catch (error) {
      console.error('❌ Error preparing quest data:', error);
    }
  <% } else { %>
    console.log('⚠️ No quests available for editing');
  <% } %>
  
  // Navigate to quests section and open quest edit modal
  console.log('🔄 Navigating to quests section...');
  
  // Set a flag to open the quest edit modal once the page loads
  sessionStorage.setItem('openQuestEditModal', 'true');
  
  // Navigate to quests section
  window.location.href = '/dashboard?section=quests';
}

// Check for flags on page load and open appropriate modals
document.addEventListener('DOMContentLoaded', function() {
  // Check if we should open task modal (when coming from overview)
  if (sessionStorage.getItem('openTaskModal') === 'true') {
    sessionStorage.removeItem('openTaskModal');
    // Small delay to ensure DOM is ready
    setTimeout(() => {
      if (typeof openTaskModal === 'function') {
        openTaskModal();
      }
    }, 100);
  }
  
  // Check if we should open user modal (when coming from overview)
  if (sessionStorage.getItem('openUserModal') === 'true') {
    sessionStorage.removeItem('openUserModal');
    // Small delay to ensure DOM is ready
    setTimeout(() => {
      if (typeof openUserModal === 'function') {
        openUserModal();
      }
    }, 100);
  }
});

// Invite code management functions
async function generateInviteCode(questId, expiresInHours = 24) {
  try {
    console.log('🔄 Generating invite code for quest:', questId);
    
    const mutation = `
      mutation GenerateQuestInviteCode($questId: ID!, $expiresInHours: Int) {
        generateQuestInviteCode(questId: $questId, expiresInHours: $expiresInHours) {
          success
          inviteCode
          botLink
          expiresAt
        }
      }
    `;

    const response = await window.graphqlClient.request(mutation, {
      questId: questId,
      expiresInHours: expiresInHours
    });

    if (response.generateQuestInviteCode.success) {
      const { inviteCode, botLink, expiresAt } = response.generateQuestInviteCode;
      
      // Update the invite code section
      const section = document.getElementById(`invite-code-section-${questId}`);
      const expireDate = expiresAt ? new Date(expiresAt) : null;
      
      section.innerHTML = `
        <div style="background: #1e293b; border-radius: 8px; padding: 1rem; border: 1px solid #334155;">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem;">
            <label style="color: #94a3b8; font-size: 0.875rem; font-weight: 500;">Quest Code:</label>
            <button onclick="copyToClipboard('${inviteCode}')" class="btn btn-secondary" style="padding: 0.25rem 0.5rem; font-size: 0.75rem;">📋 Copy</button>
          </div>
          <div style="font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace; font-size: 1.125rem; font-weight: 700; color: #a78bfa; background: #0f172a; padding: 0.75rem; border-radius: 6px; border: 1px solid #475569; letter-spacing: 0.1em;">
            ${inviteCode}
          </div>
          
          <div style="margin-top: 1rem;">
            <label style="color: #94a3b8; font-size: 0.875rem; font-weight: 500; display: block; margin-bottom: 0.5rem;">Bot Invitation Link:</label>
            <div style="display: flex; gap: 0.5rem;">
              <input type="text" 
                     id="bot-link-${questId}" 
                     value="${botLink}" 
                     readonly 
                     style="flex: 1; padding: 0.5rem; background: #0f172a; border: 1px solid #475569; border-radius: 6px; color: #94a3b8; font-size: 0.875rem; font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;">
              <button onclick="copyBotLink('${questId}')" class="btn btn-secondary" style="padding: 0.5rem; font-size: 0.75rem;">📋</button>
              <button onclick="shareBotLink('${questId}')" class="btn btn-primary" style="background: linear-gradient(45deg, #0ea5e9, #0284c7); padding: 0.5rem; font-size: 0.75rem;">📤 Share</button>
            </div>
          </div>
          
          ${expireDate ? `
            <div style="margin-top: 0.75rem; color: #f59e0b; font-size: 0.8rem; display: flex; align-items: center; gap: 0.5rem;">
              ⏰ Expires: ${expireDate.toLocaleDateString()} at ${expireDate.toLocaleTimeString()}
            </div>
          ` : ''}
          
          <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(34, 197, 94, 0.1); border: 1px solid rgba(34, 197, 94, 0.3); border-radius: 6px;">
            <div style="color: #22c55e; font-size: 0.875rem; font-weight: 600; margin-bottom: 0.25rem;">📱 How to invite users:</div>
            <div style="color: #94a3b8; font-size: 0.8rem;">
              1. Share the bot link above with team members<br>
              2. Users click the link to auto-join via Telegram<br>
              3. Or users can manually type: <code style="background: #0f172a; padding: 0.1rem 0.3rem; border-radius: 3px; color: #a78bfa;">/auth ${inviteCode}</code>
            </div>
          </div>
        </div>
      `;
      
      // Show success message
      showNotification('✅ Invite code generated successfully!', 'success');
      
    } else {
      throw new Error('Failed to generate invite code');
    }
    
  } catch (error) {
    console.error('❌ Error generating invite code:', error);
    showNotification('❌ Failed to generate invite code: ' + error.message, 'error');
  }
}

// Generate user codes function - now opens modal instead of generating all codes
async function generateUserCodes(questId) {
  // Open the user selection modal instead of generating all codes
  await openUserCodeModal(questId);
}

// User Code Modal Functions
let currentQuestId = null;
let currentQuestMembers = [];

// Open user code generation modal
async function openUserCodeModal(questId) {
  try {
    currentQuestId = questId;
    
    // Show modal and loading state
    document.getElementById('userCodeModalOverlay').style.display = 'flex';
    document.getElementById('userCodeModalLoading').style.display = 'block';
    document.getElementById('userCodeModalContent').style.display = 'none';
    document.getElementById('userCodeModalEmpty').style.display = 'none';
    
    // Fetch quest members
    const query = `
      query GetQuestMembers($questId: ID!) {
        quest(id: $questId) {
          members {
            _id
            username
            email
          }
        }
      }
    `;
    
    const response = await window.graphqlClient.request(query, { questId });
    
    if (response.quest && response.quest.members) {
      currentQuestMembers = response.quest.members;
      
      if (currentQuestMembers.length === 0) {
        // Show empty state
        document.getElementById('userCodeModalLoading').style.display = 'none';
        document.getElementById('userCodeModalEmpty').style.display = 'block';
      } else {
        // Populate user selection list
        populateUserSelectionList(currentQuestMembers);
        document.getElementById('userCodeModalLoading').style.display = 'none';
        document.getElementById('userCodeModalContent').style.display = 'block';
      }
    } else {
      throw new Error('Failed to fetch quest members');
    }
    
  } catch (error) {
    console.error('Error opening user code modal:', error);
    showNotification('❌ Failed to load team members: ' + error.message, 'error');
    closeUserCodeModal();
  }
}

// Populate user selection list with checkboxes
function populateUserSelectionList(members) {
  const container = document.getElementById('userSelectionList');
  
  let html = '';
  members.forEach(member => {
    html += `
      <div style="display: flex; align-items: center; padding: 0.75rem; margin-bottom: 0.5rem; background: #1e293b; border-radius: 6px; border: 1px solid #475569;">
        <input type="checkbox" 
               id="user-${member._id}" 
               value="${member.email}" 
               style="margin-right: 0.75rem; transform: scale(1.2);" 
               checked>
        <label for="user-${member._id}" style="flex: 1; cursor: pointer; color: #e2e8f0;">
          <div style="font-weight: 600;">${member.username}</div>
          <div style="font-size: 0.8rem; color: #94a3b8;">${member.email}</div>
        </label>
      </div>
    `;
  });
  
  container.innerHTML = html;
}

// Select/deselect all users
function selectAllUsers(selectAll) {
  const checkboxes = document.querySelectorAll('#userSelectionList input[type="checkbox"]');
  checkboxes.forEach(checkbox => {
    checkbox.checked = selectAll;
  });
}

// Generate codes for selected users
async function generateSelectedUserCodes() {
  try {
    // Get selected user emails
    const checkboxes = document.querySelectorAll('#userSelectionList input[type="checkbox"]:checked');
    const selectedEmails = Array.from(checkboxes).map(cb => cb.value);
    
    if (selectedEmails.length === 0) {
      showNotification('⚠️ Please select at least one team member', 'error');
      return;
    }
    
    console.log('🔑 Generating user codes for selected members:', selectedEmails);
    
    // Close modal first
    closeUserCodeModal();
    
    // Call the existing generateUserCodes function but with selected emails
    await generateUserCodesForEmails(currentQuestId, selectedEmails);
    
  } catch (error) {
    console.error('❌ Error generating selected user codes:', error);
    showNotification('❌ Failed to generate user codes: ' + error.message, 'error');
  }
}

// Generate user codes for specific emails
async function generateUserCodesForEmails(questId, userEmails) {
  try {
    console.log('🔑 Generating user codes for quest:', questId, 'emails:', userEmails);
    
    const response = await fetch('/api/codes/generate-user-codes', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        questId: questId,
        userEmails: userEmails
      })
    });

    const result = await response.json();
    
    if (!response.ok) {
      throw new Error(result.error || 'Failed to generate user codes');
    }
    
    console.log('✅ User codes generated:', result);
    
    // Display the generated user codes in the UI
    displayUserCodes(questId, result.userCodes);
    
    // Show success message
    showNotification(`✅ Generated ${result.userCodes.length} user codes successfully!`, 'success');
    
  } catch (error) {
    console.error('❌ Error generating user codes:', error);
    showNotification('❌ Failed to generate user codes: ' + error.message, 'error');
  }
}

// Close user code modal
function closeUserCodeModal() {
  document.getElementById('userCodeModalOverlay').style.display = 'none';
  currentQuestId = null;
  currentQuestMembers = [];
}

// Display user codes in the UI
function displayUserCodes(questId, userCodes) {
  const userCodesSection = document.getElementById(`user-codes-section-${questId}`);
  const userCodesList = document.getElementById(`user-codes-list-${questId}`);
  
  if (!userCodesSection || !userCodesList) {
    console.error('User codes display elements not found');
    return;
  }
  
  // Show the user codes section
  userCodesSection.style.display = 'block';
  
  // Generate HTML for user codes
  let html = '';
  userCodes.forEach((userCode, index) => {
    html += `
      <div style="display: flex; justify-content: space-between; align-items: center; padding: 0.5rem; margin-bottom: 0.5rem; background: #1e293b; border-radius: 4px; border: 1px solid #334155;">
        <div style="flex: 1;">
          <div style="color: #94a3b8; font-size: 0.75rem;">${userCode.username || userCode.email || `User ${index + 1}`}</div>
          <div style="font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace; font-size: 0.875rem; font-weight: 600; color: #a78bfa; letter-spacing: 0.05em;">
            ${userCode.userCode}
          </div>
          <div style="color: #64748b; font-size: 0.7rem;">
            Bot: <code style="color: #94a3b8;">/auth ${userCode.userCode}</code>
          </div>
        </div>
        <button onclick="copyToClipboard('${userCode.userCode}')" style="padding: 0.25rem 0.5rem; background: #475569; color: #e2e8f0; border: none; border-radius: 4px; font-size: 0.75rem; cursor: pointer;">📋</button>
      </div>
    `;
  });
  
  userCodesList.innerHTML = html;
}

function copyToClipboard(text) {
  navigator.clipboard.writeText(text).then(() => {
    showNotification('📋 Copied to clipboard!', 'success');
  }).catch(() => {
    showNotification('❌ Failed to copy to clipboard', 'error');
  });
}

function copyBotLink(questId) {
  const input = document.getElementById(`bot-link-${questId}`);
  if (input) {
    input.select();
    navigator.clipboard.writeText(input.value).then(() => {
      showNotification('📋 Bot link copied to clipboard!', 'success');
    }).catch(() => {
      showNotification('❌ Failed to copy bot link', 'error');
    });
  }
}

function shareBotLink(questId) {
  const input = document.getElementById(`bot-link-${questId}`);
  if (input && navigator.share) {
    navigator.share({
      title: 'Join our TaskQuest team!',
      text: 'Click this link to join our quest team on Telegram:',
      url: input.value
    }).catch(console.error);
  } else if (input) {
    // Fallback to copying
    copyBotLink(questId);
  }
}

function showNotification(message, type = 'info') {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = `flash-notification flash-${type}`;
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 10000;
    background: ${type === 'success' ? '#059669' : type === 'error' ? '#dc2626' : '#3b82f6'};
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    animation: slideInRight 0.3s ease-out;
  `;
  notification.textContent = message;
  
  document.body.appendChild(notification);
  
  // Auto remove after 3 seconds
  setTimeout(() => {
    notification.style.animation = 'slideOutRight 0.3s ease-in';
    setTimeout(() => notification.remove(), 300);
  }, 3000);
}

// Add CSS animations
const style = document.createElement('style');
style.textContent = `
  @keyframes slideInRight {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  @keyframes slideOutRight {
    from { transform: translateX(0); opacity: 1; }
    to { transform: translateX(100%); opacity: 0; }
  }
`;
document.head.appendChild(style);
</script>
