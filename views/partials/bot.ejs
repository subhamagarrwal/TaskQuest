<!-- Header -->
<div class="header">
  <h1>Manage Bot</h1>
  <div class="user-info">
    <div class="user-avatar">
      <%= user && user.username ? user.username.charAt(0).toUpperCase() : 'U' %>
    </div>
    <div>
      <div style="font-weight: 600;"><%= user && user.username ? user.username : 'User' %></div>
      <div style="color: #64748b; font-size: 0.875rem;"><%= user && user.role === 'ADMIN' ? 'Project Manager' : 'Team Member' %></div>
    </div>
  </div>
</div>

<!-- Bot Management Section -->
<div class="dashboard-main">
  <div class="analytics-section">
    <div class="section-header">
      <h2 class="section-title">TaskQuest Bot Configuration</h2>
      <div style="display: flex; align-items: center; gap: 0.5rem;">
        <div style="width: 12px; height: 12px; background: #22c55e; border-radius: 50%;"></div>
        <span style="color: #22c55e; font-size: 0.875rem;">Bot Online</span>
      </div>
    </div>
    
    <!-- Bot Settings Cards -->
    <div class="dashboard-grid" style="grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
      <div class="dashboard-card">
        <div class="card-header">
          <div class="card-avatar" style="background: linear-gradient(45deg, #3b82f6, #1d4ed8); display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">💬</div>
          <div class="card-info">
            <h3>Command Responses</h3>
            <p>Customize bot command messages</p>
          </div>
        </div>
        <div style="margin-top: 1rem;">
          <button class="btn btn-primary" style="width: 100%; margin-bottom: 0.5rem;" onclick="openResponseModal()">Edit Responses</button>
          <p style="color: #64748b; font-size: 0.875rem; margin: 0;">Configure how the bot responds to each command</p>
        </div>
      </div>

      <div class="dashboard-card">
        <div class="card-header">
          <div class="card-avatar" style="background: linear-gradient(45deg, #f59e0b, #d97706); display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">📊</div>
          <div class="card-info">
            <h3>Analytics</h3>
            <p>View bot usage statistics</p>
          </div>
        </div>
        <button class="btn btn-secondary" style="width: 100%; margin-top: 1rem;">View Analytics</button>
      </div>
    </div>

    <!-- Bot Commands -->
    <div style="background: rgba(15, 23, 42, 0.6); border: 1px solid rgba(71, 85, 105, 0.3); border-radius: 16px; padding: 1.5rem;">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
        <h3 style="margin: 0;">Available Commands</h3>
        <button class="btn btn-outline" onclick="addNewCommand()" style="padding: 0.5rem 1rem; font-size: 0.875rem;">+ Add Command</button>
      </div>
      <div id="commands-container" style="display: grid; gap: 1rem;">
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/start</code>
            <span style="margin-left: 1rem; color: #64748b;">Start interacting with the bot and receive welcome message</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/auth</code>
            <span style="margin-left: 1rem; color: #64748b;">Authenticate with quest invite code to join a quest</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/help</code>
            <span style="margin-left: 1rem; color: #64748b;">Show available commands and usage instructions</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/info</code>
            <span style="margin-left: 1rem; color: #64748b;">Get detailed information about your tasks and role</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/tasks</code>
            <span style="margin-left: 1rem; color: #64748b;">View your current tasks and their statuses</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/task</code>
            <span style="margin-left: 1rem; color: #64748b;">Get detailed info about a specific task (e.g., /task 1)</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/update</code>
            <span style="margin-left: 1rem; color: #64748b;">Update the status of your tasks with interactive buttons</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
        <div class="command-item" style="display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;">
          <div style="flex: 1;">
            <code style="color: #22c55e;">/leave</code>
            <span style="margin-left: 1rem; color: #64748b;">Remove yourself from the current quest</span>
          </div>
          <div style="display: flex; gap: 0.5rem; align-items: center;">
            <span style="color: #64748b; font-size: 0.875rem;">Active</span>
            <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
            <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bot Performance -->
  <div class="performance-card">
    <h2 class="performance-title">Bot Performance</h2>
    <div class="metric">
      <div class="metric-icon">💬</div>
      <div class="metric-info">
        <h3>247</h3>
        <p>messages today</p>
      </div>
    </div>
    <div class="metric">
      <div class="metric-icon">👥</div>
      <div class="metric-info">
        <h3>42</h3>
        <p>active users</p>
      </div>
    </div>
    <div class="metric">
      <div class="metric-icon">⚡</div>
      <div class="metric-info">
        <h3>98%</h3>
        <p>uptime</p>
      </div>
    </div>
    <div class="metric">
      <div class="metric-icon">🎯</div>
      <div class="metric-info">
        <h3>4.8</h3>
        <p>avg rating</p>
      </div>
    </div>
    <a href="/chatbot" class="btn btn-primary" style="margin-top: 2rem; margin-bottom: 0; width: 100%; display: flex; align-items: center; justify-content: center; gap: 0.75rem; font-size: 1.25rem; padding: 1.25rem 0; border-radius: 16px; background: linear-gradient(90deg, #22c55e 0%, #84cc16 100%); color: #fff; font-weight: 700; box-shadow: 0 4px 16px rgba(34,197,94,0.15);">
      <span style="font-size: 1.5rem;">🤖</span> Chat with Bot
    </a>
  </div>
</div>

<!-- Response Configuration Modal -->
<div id="responseModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; align-items: center; justify-content: center;">
  <div style="background: #1e293b; border-radius: 16px; padding: 2rem; width: 90%; max-width: 600px; max-height: 80vh; overflow-y: auto;">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
      <h2 style="margin: 0;">Configure Command Responses</h2>
      <button onclick="closeResponseModal()" style="background: none; border: none; color: #64748b; font-size: 1.5rem; cursor: pointer;">&times;</button>
    </div>
    
    <div>
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Start Command Response:</label>
        <textarea id="startResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /start command...">🎉 Welcome to TaskQuest Bot!

Hello {username}! TaskQuest helps you manage collaborative quests and tasks with your team.

🔐 First Time? You'll need to authenticate with a quest invite code.
📋 Returning User? Check your tasks and update your progress!</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Auth Command Response:</label>
        <textarea id="authResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /auth command...">🔑 Quest Authentication

Please provide a quest code to join.

Usage: /auth <quest-code>
Example: /auth QUEST123

💡 Get your quest code from your quest admin or TaskQuest dashboard.</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Help Command Response:</label>
        <textarea id="helpResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /help command...">🤖 TaskQuest Bot Help

Here are the commands you can use:

🚀 /start - Start interacting with the bot
🔐 /auth - Authenticate with quest code
📋 /tasks - View your current tasks
📝 /task <number> - Get detailed task info
🔄 /update - Update task status
ℹ️ /info - Get task and role information
❌ /leave - Leave current quest
❓ /help - Show this help message</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Info Command Response:</label>
        <textarea id="infoResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /info command...">📋 Your Quest Information

👤 User: {username}
🎭 Role: {user_role}

Your Tasks:
{tasks_list}</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Tasks Command Response:</label>
        <textarea id="tasksResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /tasks command...">📋 Here are your current tasks:

{tasks_list}

Use /task <number> for detailed info or /update to modify task status.</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Task Command Response:</label>
        <textarea id="taskResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /task command...">📝 Task Details:

Title: {task_title}
Description: {task_description}
Status: {task_status}
Due Date: {task_due_date}
Priority: {task_priority}</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Update Command Response:</label>
        <textarea id="updateResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /update command...">🔄 Update Task Status

Select a task to update:
{task_buttons}

Choose the new status for your selected task.</textarea>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Leave Command Response:</label>
        <textarea id="leaveResponse" style="width: 100%; min-height: 80px; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0; resize: vertical;" placeholder="Enter the response for /leave command...">❌ Leave Quest

Are you sure you want to leave the current quest?

This action will:
• Remove you from all assigned tasks
• Remove access to quest updates
• Require re-authentication to rejoin

Confirm by clicking the button below.</textarea>
      </div>
    </div>
    
    <div style="display: flex; gap: 1rem; margin-top: 1.5rem;">
      <button onclick="saveResponses()" class="btn btn-primary" style="flex: 1;">Save Changes</button>
      <button onclick="closeResponseModal()" class="btn btn-secondary" style="flex: 1;">Cancel</button>
    </div>
  </div>
</div>

<!-- Command Edit Modal -->
<div id="commandModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; align-items: center; justify-content: center;">
  <div style="background: #1e293b; border-radius: 16px; padding: 2rem; width: 90%; max-width: 500px;">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
      <h2 style="margin: 0;">Edit Command</h2>
      <button onclick="closeCommandModal()" style="background: none; border: none; color: #64748b; font-size: 1.5rem; cursor: pointer;">&times;</button>
    </div>
    
    <div style="margin-bottom: 1rem;">
      <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Command:</label>
      <input type="text" id="commandName" style="width: 100%; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0;" placeholder="/command">
    </div>
    
    <div style="margin-bottom: 1.5rem;">
      <label style="display: block; margin-bottom: 0.5rem; color: #e2e8f0;">Description:</label>
      <input type="text" id="commandDescription" style="width: 100%; padding: 0.75rem; background: #334155; border: 1px solid #475569; border-radius: 8px; color: #e2e8f0;" placeholder="Command description">
    </div>
    
    <div style="display: flex; gap: 1rem;">
      <button onclick="saveCommand()" class="btn btn-primary" style="flex: 1;">Save</button>
      <button onclick="deleteCommand()" class="btn" style="flex: 1; background: #dc2626; color: white;">Delete</button>
      <button onclick="closeCommandModal()" class="btn btn-secondary" style="flex: 1;">Cancel</button>
    </div>
  </div>
</div>

<script>
let currentEditingCommand = null;

function openResponseModal() {
  document.getElementById('responseModal').style.display = 'flex';
}

function closeResponseModal() {
  document.getElementById('responseModal').style.display = 'none';
}

function saveResponses() {
  const startResponse = document.getElementById('startResponse').value;
  const authResponse = document.getElementById('authResponse').value;
  const helpResponse = document.getElementById('helpResponse').value;
  const infoResponse = document.getElementById('infoResponse').value;
  const tasksResponse = document.getElementById('tasksResponse').value;
  const taskResponse = document.getElementById('taskResponse').value;
  const updateResponse = document.getElementById('updateResponse').value;
  const leaveResponse = document.getElementById('leaveResponse').value;
  
  // Here you would send the data to your backend
  console.log('Saving responses:', { 
    startResponse, 
    authResponse, 
    helpResponse, 
    infoResponse, 
    tasksResponse, 
    taskResponse, 
    updateResponse, 
    leaveResponse 
  });
  
  // Show success message
  alert('Bot responses updated successfully!');
  closeResponseModal();
}

function editCommand(button) {
  const commandItem = button.closest('.command-item');
  const commandCode = commandItem.querySelector('code').textContent;
  const commandDesc = commandItem.querySelector('span').textContent;
  
  currentEditingCommand = commandItem;
  document.getElementById('commandName').value = commandCode;
  document.getElementById('commandDescription').value = commandDesc;
  document.getElementById('commandModal').style.display = 'flex';
}

function addNewCommand() {
  currentEditingCommand = null;
  document.getElementById('commandName').value = '';
  document.getElementById('commandDescription').value = '';
  document.getElementById('commandModal').style.display = 'flex';
}

function closeCommandModal() {
  document.getElementById('commandModal').style.display = 'none';
  currentEditingCommand = null;
}

function saveCommand() {
  const commandName = document.getElementById('commandName').value;
  const commandDescription = document.getElementById('commandDescription').value;
  
  if (!commandName || !commandDescription) {
    alert('Please fill in both command name and description.');
    return;
  }
  
  if (currentEditingCommand) {
    // Update existing command
    currentEditingCommand.querySelector('code').textContent = commandName;
    currentEditingCommand.querySelector('span').textContent = commandDescription;
  } else {
    // Add new command
    const container = document.getElementById('commands-container');
    const newCommand = document.createElement('div');
    newCommand.className = 'command-item';
    newCommand.style.cssText = 'display: flex; justify-content: space-between; align-items: center; padding: 0.75rem; background: rgba(71, 85, 105, 0.2); border-radius: 8px;';
    newCommand.innerHTML = `
      <div style="flex: 1;">
        <code style="color: #22c55e;">${commandName}</code>
        <span style="margin-left: 1rem; color: #64748b;">${commandDescription}</span>
      </div>
      <div style="display: flex; gap: 0.5rem; align-items: center;">
        <span style="color: #64748b; font-size: 0.875rem;">Active</span>
        <button onclick="editCommand(this)" style="background: none; border: none; color: #64748b; cursor: pointer; padding: 0.25rem;">✏️</button>
        <button onclick="toggleCommand(this)" style="background: none; border: none; color: #22c55e; cursor: pointer; padding: 0.25rem;">●</button>
      </div>
    `;
    container.appendChild(newCommand);
  }
  
  // Here you would send the data to your backend
  console.log('Saving command:', { commandName, commandDescription });
  
  closeCommandModal();
}

function deleteCommand() {
  if (currentEditingCommand && confirm('Are you sure you want to delete this command?')) {
    currentEditingCommand.remove();
    closeCommandModal();
  }
}

function toggleCommand(button) {
  const statusSpan = button.parentElement.querySelector('span');
  const isActive = statusSpan.textContent === 'Active';
  
  if (isActive) {
    statusSpan.textContent = 'Inactive';
    statusSpan.style.color = '#ef4444';
    button.style.color = '#ef4444';
  } else {
    statusSpan.textContent = 'Active';
    statusSpan.style.color = '#64748b';
    button.style.color = '#22c55e';
  }
  
  // Here you would send the status update to your backend
  console.log('Toggling command status');
}
</script>
