1. Landing Page
   - Welcome message and options to log in.

2. Login
   a. Phone Login (Firebase SMS OTP)
   b. Email Login (Google Auth)

3. Dashboard (after login)
   - Shows previous tasks/items.
   - Option to create a new task.

4. Create Task
   - User enters:
     - Task name
     - Number of participants
     - Time of completion
     - Email addresses, etc.
   - Each task is assigned a unique abbreviation (e.g., task1, task2, ...).

5. Send Invites
   - Invite link sent via email or Telegram.

6. Telegram Bot Integration (BotFather)
   - Users join a Telegram group/chat with the bot.
   - **Bot listens for commands:**
     - Users can type commands like `task1 done` or `task3 done`.
     - The bot receives the message, parses the task abbreviation and status.
     - The backend (Node.js/Express) receives this via a webhook, updates the database for the corresponding task and user.

7. Task Completion & Reporting
   - When all participants mark their task as done, or when the admin triggers it:
     - Option appears in the dashboard to generate a report.
     - Backend generates a PDF report summarizing the task, participants, and completion status.
     - PDF can be downloaded or sent via email/Telegram.

8. Daily Reminders (optional/future)
   - Bot sends daily reminders to participants and admin about pending tasks.

---

// Implementation Notes:

- **Telegram Bot:** Use `node-telegram-bot-api` or similar library. Set up a webhook endpoint in Express to receive messages.
- **Task Abbreviations:** Store a mapping of task abbreviations to task IDs in your database.
- **PDF Generation:** Use libraries like `pdfkit` or `puppeteer` to generate PDF reports.
- **Database:** Store users, tasks, task status, and Telegram user IDs for mapping.
- **Security:** Authenticate Telegram users to ensure only invited participants can update tasks.

---

// Example Telegram Command Flow:

User types in Telegram:  
`task1 done`

Bot receives message → Backend parses command → Updates DB → Optionally replies with confirmation.

When all are done, admin sees "Generate Report" button in dashboard.

Additional
Joi form validation
Flash messages+ error handling
Helmet security
Authorization:- if ur a admin only thrn u get in if user then inform immediately

Bull mq/rabit mq
Redis
